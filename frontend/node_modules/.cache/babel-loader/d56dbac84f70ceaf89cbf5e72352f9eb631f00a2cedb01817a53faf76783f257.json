{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\remys\\\\OneDrive\\\\Desktop\\\\TherapyApp\\\\frontend\\\\src\\\\components\\\\EntryForm\\\\EntrySelectField.js\";\nimport * as React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { Controller } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectVariants(props) {\n  const {\n    label,\n    name,\n    control,\n    moodColors\n  } = props; // Added moodColors prop for passing color options\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"standard\",\n      sx: {\n        m: 1,\n        minWidth: 120\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"mood-color-select-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: name,\n        control: control,\n        render: ({\n          field: {\n            onChange,\n            value\n          },\n          fieldState: {\n            error\n          }\n        }) => /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"mood-color-select-label\",\n          id: \"mood-color-select\",\n          label: label,\n          value: value // Pass the controlled value\n          ,\n          onChange: onChange // Bind the onChange handler\n          ,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), moodColors.map(color => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: color.value,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: color.value,\n                padding: '5px 10px'\n              },\n              children: color.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, color.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = SelectVariants;\nvar _c;\n$RefreshReg$(_c, \"SelectVariants\");","map":{"version":3,"names":["React","InputLabel","MenuItem","FormControl","Select","Controller","jsxDEV","_jsxDEV","SelectVariants","props","label","name","control","moodColors","children","variant","sx","m","minWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","render","field","onChange","value","fieldState","error","labelId","map","color","style","backgroundColor","padding","_c","$RefreshReg$"],"sources":["C:/Users/remys/OneDrive/Desktop/TherapyApp/frontend/src/components/EntryForm/EntrySelectField.js"],"sourcesContent":["import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nexport default function SelectVariants(props) {\r\n  const { label, name, control, moodColors } = props; // Added moodColors prop for passing color options\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n        <InputLabel id=\"mood-color-select-label\">{label}</InputLabel>\r\n        <Controller\r\n          name={name}\r\n          control={control}\r\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n            <Select\r\n              labelId=\"mood-color-select-label\"\r\n              id=\"mood-color-select\"\r\n              label={label}\r\n              value={value} // Pass the controlled value\r\n              onChange={onChange} // Bind the onChange handler\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {/* Map over the moodColors array to create the options */}\r\n              {moodColors.map((color) => (\r\n                <MenuItem key={color.value} value={color.value}>\r\n                  <span style={{ backgroundColor: color.value, padding: '5px 10px' }}>\r\n                    {color.label}\r\n                  </span>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        />\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC5C,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGJ,KAAK,CAAC,CAAC;;EAEpD,oBACEF,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACJ,WAAW;MAACY,OAAO,EAAC,UAAU;MAACC,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAJ,QAAA,gBAC1DP,OAAA,CAACN,UAAU;QAACkB,EAAE,EAAC,yBAAyB;QAAAL,QAAA,EAAEJ;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC7DhB,OAAA,CAACF,UAAU;QACTM,IAAI,EAAEA,IAAK;QACXC,OAAO,EAAEA,OAAQ;QACjBY,MAAM,EAAEA,CAAC;UAAEC,KAAK,EAAE;YAAEC,QAAQ;YAAEC;UAAM,CAAC;UAAEC,UAAU,EAAE;YAAEC;UAAM;QAAE,CAAC,kBAC5DtB,OAAA,CAACH,MAAM;UACL0B,OAAO,EAAC,yBAAyB;UACjCX,EAAE,EAAC,mBAAmB;UACtBT,KAAK,EAAEA,KAAM;UACbiB,KAAK,EAAEA,KAAM,CAAC;UAAA;UACdD,QAAQ,EAAEA,QAAS,CAAC;UAAA;UAAAZ,QAAA,gBAEpBP,OAAA,CAACL,QAAQ;YAACyB,KAAK,EAAC,EAAE;YAAAb,QAAA,eAChBP,OAAA;cAAAO,QAAA,EAAI;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAEVV,UAAU,CAACkB,GAAG,CAAEC,KAAK,iBACpBzB,OAAA,CAACL,QAAQ;YAAmByB,KAAK,EAAEK,KAAK,CAACL,KAAM;YAAAb,QAAA,eAC7CP,OAAA;cAAM0B,KAAK,EAAE;gBAAEC,eAAe,EAAEF,KAAK,CAACL,KAAK;gBAAEQ,OAAO,EAAE;cAAW,CAAE;cAAArB,QAAA,EAChEkB,KAAK,CAACtB;YAAK;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC,GAHMS,KAAK,CAACL,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIhB,CACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV;AAACa,EAAA,GAnCuB5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}