{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\remys\\\\OneDrive\\\\Desktop\\\\TherapyApp\\\\frontend\\\\src\\\\App.js\";\nimport axios from 'axios';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\n\n// Calendar Tile Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CalendarTile = ({\n  date,\n  entries\n}) => {\n  const entry = entries.find(entry => entry.date === date.toISOString().split('T')[0]);\n  return entry ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: entry.mood_color,\n      height: '100%',\n      width: '100%',\n      borderRadius: '50%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) : null;\n};\n\n// Main App Component\n_c = CalendarTile;\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: [],\n      // List of journal entries\n      selectedDate: null,\n      // Selected date for the calendar\n      isLoading: true,\n      // Loading state\n      error: null // Error handling\n    };\n  }\n  // Fetch entries from the backend\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/').then(res => {\n      this.setState({\n        details: res.data,\n        isLoading: false\n      });\n    }).catch(err => {\n      this.setState({\n        error: 'Error fetching data.',\n        isLoading: false\n      });\n      console.error('Error fetching data:', err);\n    });\n  }\n\n  // Render method\n  render() {\n    const {\n      details,\n      selectedDate,\n      isLoading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyTherapy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: details.map((entry, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [entry.date, \" | \", entry.mood_color, \" | \", entry.journal_entry]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-container\",\n          children: /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: date => this.setState({\n              selectedDate: date\n            }),\n            value: selectedDate,\n            tileContent: ({\n              date,\n              view\n            }) => /*#__PURE__*/_jsxDEV(CalendarTile, {\n              date: date,\n              entries: details\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"CalendarTile\");","map":{"version":3,"names":["axios","React","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","CalendarTile","date","entries","entry","find","toISOString","split","style","backgroundColor","mood_color","height","width","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","Component","constructor","args","state","details","selectedDate","isLoading","error","componentDidMount","get","then","res","setState","data","catch","err","console","render","children","map","id","journal_entry","className","onChange","value","tileContent","view","$RefreshReg$"],"sources":["C:/Users/remys/OneDrive/Desktop/TherapyApp/frontend/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './App.css';\n\n// Calendar Tile Component\nconst CalendarTile = ({ date, entries }) => {\n  const entry = entries.find((entry) => entry.date === date.toISOString().split('T')[0]);\n\n  return entry ? (\n    <div\n      style={{\n        backgroundColor: entry.mood_color,\n        height: '100%',\n        width: '100%',\n        borderRadius: '50%',\n      }}\n    />\n  ) : null;\n};\n\n// Main App Component\nclass App extends React.Component {\n  state = {\n    details: [], // List of journal entries\n    selectedDate: null, // Selected date for the calendar\n    isLoading: true, // Loading state\n    error: null, // Error handling\n  };\n\n  // Fetch entries from the backend\n  componentDidMount() {\n    axios\n      .get('http://127.0.0.1:8000/')\n      .then((res) => {\n        this.setState({\n          details: res.data,\n          isLoading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          error: 'Error fetching data.',\n          isLoading: false,\n        });\n        console.error('Error fetching data:', err);\n      });\n  }\n\n  // Render method\n  render() {\n    const { details, selectedDate, isLoading, error } = this.state;\n\n    return (\n      <div>\n        <h1>MyTherapy</h1>\n        <hr />\n\n        {isLoading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <>\n            <div>\n              {details.map((entry, id) => (\n                <div key={id}>\n                  <h4>\n                    {entry.date} | {entry.mood_color} | {entry.journal_entry}\n                  </h4>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"calendar-container\">\n              <Calendar\n                onChange={(date) => this.setState({ selectedDate: date })}\n                value={selectedDate}\n                tileContent={({ date, view }) => (\n                  <CalendarTile date={date} entries={details} />\n                )}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}